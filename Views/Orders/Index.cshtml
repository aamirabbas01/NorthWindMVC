@model PagedResult<NorthWindMVC.Models.Order>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Orders</h1>

<div class="float-end">
    <a asp-action="Create">Create New</a>
</div>
<div class="table-responsive" style="max-width: 100%;">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Items.FirstOrDefault().OrderDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Items.FirstOrDefault().ShippedDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Items.FirstOrDefault().Freight)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Items.FirstOrDefault().ShipName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Items.FirstOrDefault().ShipCity)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Items.FirstOrDefault().ShipCountry)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Items.FirstOrDefault().Customer)
                </th>
                
                <th></th>
            </tr>
        </thead>
        <tbody>
    @foreach (var item in Model.Items) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.OrderDate)
                </td>
               
                <td>
                    @Html.DisplayFor(modelItem => item.ShippedDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Freight)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ShipName)
                </td>
               
                <td>
                    @Html.DisplayFor(modelItem => item.ShipCity)
                </td>
               
                <td>
                    @Html.DisplayFor(modelItem => item.ShipCountry)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Customer.ContactName)
                </td>
               
                <td>
                    <a asp-action="Edit" asp-route-id="@item.OrderId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.OrderId">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.OrderId">Delete</a>
                </td>
            </tr>
    }
        </tbody>
    </table>
    <nav>
        @{
            int maxPagesToShow = 5;
            int startPage = Math.Max(1, Model.PageNumber - 2);
            int endPage = Math.Min(Model.TotalPages, startPage + maxPagesToShow - 1);
            if (endPage - startPage < maxPagesToShow - 1)
                startPage = Math.Max(1, endPage - maxPagesToShow + 1);
        }
        <ul class="pagination justify-content-center flex-wrap" style="margin-bottom: 0;">
            <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                <a class="page-link" asp-action="Index" asp-route-page="@(Model.PageNumber - 1)">Previous</a>
            </li>
            @if (startPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="1">1</a>
                </li>
                @if (startPage > 2)
                {
                    <li class="page-item disabled"><span class="page-link">…</span></li>
                }
            }
            @for (int i = startPage; i <= endPage; i++)
            {
                <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
                </li>
            }
            @if (endPage < Model.TotalPages)
            {
                if (endPage < Model.TotalPages - 1)
                {
                    <li class="page-item disabled"><span class="page-link">…</span></li>
                }
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="@Model.TotalPages">@Model.TotalPages</a>
                </li>
            }
            <li class="page-item @(Model.PageNumber == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" asp-action="Index" asp-route-page="@(Model.PageNumber + 1)">Next</a>
            </li>
        </ul>
    </nav>
</div>

<style>
.table-responsive {
    margin: 0 auto;
    max-width: 100%;
}
.pagination {
    margin-top: 0.5rem;
    flex-wrap: wrap;
}
</style>